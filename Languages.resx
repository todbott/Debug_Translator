<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ChooseDBG_en" xml:space="preserve">
    <value>Choose *.dbg file</value>
  </data>
  <data name="ChooseDBG_jp" xml:space="preserve">
    <value>DBGファイルを選択する</value>
  </data>
  <data name="ChooseDictionary_en" xml:space="preserve">
    <value>Choose dictionary</value>
  </data>
  <data name="ChooseDictionary_jp" xml:space="preserve">
    <value>辞書ファイルを選択する</value>
  </data>
  <data name="ChosenDBG_en" xml:space="preserve">
    <value>Chosen *.dbg file:</value>
  </data>
  <data name="ChosenDBG_jp" xml:space="preserve">
    <value>DBGファイル</value>
  </data>
  <data name="ChosenDictionary_en" xml:space="preserve">
    <value>Chosen dictionary:</value>
  </data>
  <data name="ChosenDictionary_jp" xml:space="preserve">
    <value>辞書ファイル</value>
  </data>
  <data name="Complete_en" xml:space="preserve">
    <value>Translation is complete.  The translated file has been saved in the original location with the same name as the original debug file + "_en.dbg".</value>
  </data>
  <data name="Complete_jp" xml:space="preserve">
    <value>翻訳が終了です。デバグファイルは元のファイル名 + _EN.dbg として元のところに保存しております。</value>
  </data>
  <data name="languageLabel_en" xml:space="preserve">
    <value>Language:</value>
  </data>
  <data name="languageLabel_jp" xml:space="preserve">
    <value>言語設定</value>
  </data>
  <data name="languageSelector_en" xml:space="preserve">
    <value>日本語</value>
  </data>
  <data name="languageSelector_jp" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="ListupProgress_en" xml:space="preserve">
    <value>Detecting untranslated segments and writing to Excel file</value>
  </data>
  <data name="ListupProgress_jp" xml:space="preserve">
    <value>未翻訳文のリストアップ</value>
  </data>
  <data name="Problem_en" xml:space="preserve">
    <value>Some parts of the debug file could not be translated, because the words did not exist in the dictionary.  Please open the dictionary file in Excel and add the missing words, then try translation again.</value>
  </data>
  <data name="Problem_jp" xml:space="preserve">
    <value>DBG ファイルで辞書に存在しないため、翻訳できないところがありました。エクセルで辞書を開いて、対訳を入力し、もう一回DBGファイルを翻訳してください。</value>
  </data>
  <data name="ProgressLabel_en" xml:space="preserve">
    <value>Translation progress:</value>
  </data>
  <data name="ProgressLabel_jp" xml:space="preserve">
    <value>翻訳の進行</value>
  </data>
  <data name="ReadingDictionary_en" xml:space="preserve">
    <value>Reading dictionary...</value>
  </data>
  <data name="ReadingDictionary_jp" xml:space="preserve">
    <value>辞書の内容の読み込み中</value>
  </data>
  <data name="TranslateDBG_en" xml:space="preserve">
    <value>Translate</value>
  </data>
  <data name="TranslateDBG_jp" xml:space="preserve">
    <value>翻訳開始</value>
  </data>
</root>